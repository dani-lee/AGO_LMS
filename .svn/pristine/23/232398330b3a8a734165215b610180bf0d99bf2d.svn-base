package com.one.controller.user.myPage;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.IOUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.one.command.MemberCriteria;
import com.one.dto.ExtReportVO;
import com.one.dto.FinishedClassVO;
import com.one.dto.MemberVO;
import com.one.service.CommonService;
import com.one.service.MyClassService;

@Controller
@RequestMapping("/user/myPage/completedClass")
public class ListCompletedClassController {
	
	@Autowired
	private MyClassService myClassService;
	
	@Autowired
	private CommonService commonService;
	
	@Resource(name = "classUploadPath")
	private String picturePath;
	
	@RequestMapping(value = "/list.do", method = RequestMethod.GET)
	public ModelAndView list(@RequestParam(value = "sortType", defaultValue="int", required = false) String sortType, MemberCriteria cri,ModelAndView mnv,HttpSession session ) throws SQLException {
		String url = "user/myPage/ListCompletedClass/list";
		MemberVO member = (MemberVO) session.getAttribute("loginUser");
		System.out.println(member.toString());
		cri.setMemId(member.getMemId());
		String email = member.getMemEmail();
		
		Map<String, Object> dataMap = new HashMap<String, Object>();
		if(cri.getSortType().equals("int") || sortType.equals("int")) {
			dataMap = myClassService.getMemberClList(cri,email);			
		}else if(cri.getSortType().equals("ext") || sortType.equals("ext")){
			dataMap =  myClassService.getExtList(cri,email);
		}else {
			dataMap = myClassService.getExtReportList(cri,email);
		}
	
		
		System.out.println(cri.toString());
		System.out.println("@@@@@@@@@@@@           년도써치타입      " +cri.getSearchType());
		System.out.println("@@@@@@@@@@@@           년도키워드      " +cri.getKeyword());

		mnv.addObject("dataMap", dataMap);
		mnv.setViewName(url);
		
		return mnv;
	}
//	@RequestParam("extCode") String extCode,
	@RequestMapping("/extReportForm.pop")
	public ModelAndView extReportForm(ModelAndView mnv,  MemberCriteria mCri, HttpSession session) throws Exception {
		String url = "user/myPage/ListCompletedClass/extReportForm"; //외부교육 수료증도 첨부해야됨...
		
//		ExtReportVO extReport = getExtReport(extCode, mCri, session);
//		
//		mnv.addObject("extReport",extReport);
		mnv.setViewName(url);
		return mnv;
	}	
	
	
	@RequestMapping(value = "/getPicture", produces = "text/plain;charset=utf-8")
	public ResponseEntity<byte[]> getPicture(String picture) throws IOException {
		InputStream in = null;
		ResponseEntity<byte[]> entity = null;
		String imgPath = picturePath;
		try {

			in = new FileInputStream(new File(imgPath, picture));
			entity = new ResponseEntity<byte[]>(IOUtils.toByteArray(in), HttpStatus.CREATED);
		} finally {
			in.close();
		}

		return entity;
	}
	

	@RequestMapping(value = "/regist.do", method = RequestMethod.GET)
	public ModelAndView regist(ModelAndView mnv, HttpSession session) throws SQLException{
		String url = "user/myPage/ListCompletedClass/regist";
		MemberVO member = (MemberVO) session.getAttribute("loginUser");
		System.out.println(member.toString());
		MemberVO convertMember = commonService.getConvertPositionAndDpBymemInfo(member);
//		member.setPositionId(convertPosi);
		//			commonService.getConvertPositionAndDPByLoginInfo(member);
		mnv.addObject("convert",convertMember);
		mnv.addObject("member",member);
		mnv.setViewName(url);
		return mnv;
	}


}
